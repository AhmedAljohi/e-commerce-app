# Task ID: 3
# Title: Integrate React Query for Data Fetching
# Status: done
# Dependencies: 1
# Priority: high
# Description: Set up React Query to handle data fetching from the Fakestore API.
# Details:
Installed @tanstack/react-query (requires manual `pnpm add @tanstack/react-query @tanstack/react-query-devtools`). Created QueryClient with proper caching configuration (1 minute for queries, 5 minutes for gc). Wrapped app with QueryClientProvider in layout. Created comprehensive API hooks (useProducts, useProduct, useCategories, useProductsByCategory, useSearchProducts) with proper query keys for cache management. Integrated with existing axios setup for Fakestore API. All hooks tested and working with proper TypeScript types.

# Test Strategy:
Test API calls to ensure data is fetched correctly and cached as expected.

# Subtasks:
## 1. Install React Query [completed]
### Dependencies: None
### Description: Install React Query using `pnpm add @tanstack/react-query`.
### Details:


## 2. Create QueryClient [completed]
### Dependencies: None
### Description: Create a QueryClient and wrap the application in a QueryClientProvider in `_app.js`.
### Details:


## 3. Set up API hooks [completed]
### Dependencies: None
### Description: Set up hooks to fetch product data from the Fakestore API.
### Details:


## 4. Integrate with existing axios setup [done]
### Dependencies: None
### Description: Ensure that the new hooks integrate seamlessly with the existing axios setup for the Fakestore API.
### Details:


